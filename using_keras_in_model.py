# -*- coding: utf-8 -*-
"""Using_Keras_In_Model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ccOl8JgsNADQrbw0nMyBNWY9UXy7SuM-
"""

import keras
from keras.models import Sequential
from keras.layers import Dense, Dropout, Activation
from keras.optimizers import SGD
import numpy as np

x_train = np.random.random((1000, 20))
y_train = keras.utils.to_categorical(np.random.randint(10, size=(1000, 1)), num_classes=10)
x_test = np.random.random((100, 20))
y_test = keras.utils.to_categorical(np.random.randint(10, size=(100, 1)), num_classes=10)

x_train[50:51]

y_train[50:51]

x_test[0]

y_test[0]

from keras.optimizers import SGD
from keras.models import Sequential
from keras.layers import Dense, Dropout

model = Sequential()

model.add(Dense(64, activation='relu', input_dim=20))
model.add(Dropout(0.5))
model.add(Dense(64, activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(10, activation='softmax'))

# Define the optimizer without the decay parameter
sgd = SGD(lr=0.01, momentum=0.9, nesterov=True)

# Compile the model with the defined optimizer
model.compile(loss='categorical_crossentropy', optimizer=sgd, metrics=['accuracy'])

model.compile(loss='categorical_crossentropy',
              optimizer = sgd,
              metrics=['accuracy'])

model.fit(x_train, y_train,
          epochs=1000,
          batch_size=128)

score = model.evaluate(x_test, y_test, batch_size=128)

model.metrics_names

score

model.predict(x_train[50:51], batch_size=None, verbose=0, steps=None)

model.predict(x_train[45:46], batch_size=None, verbose=0, steps=None)

y_train[45:46]